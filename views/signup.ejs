<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Sign Up</title>
  <style>
    body { font-family: 'Trebuchet MS', Arial, sans-serif; background: linear-gradient(135deg, #7CC3E3, #203a43, #2c5364); margin: 0; padding: 0; display: flex; flex-direction: column; align-items: center; }
    .signup-container {
      background: #f4f4f4;
      border-radius: 30px;
      max-width: 500px;
      width: 80%;
      /* min-width: 220px; */
      margin: 5vw auto;
      padding: 7vw 5vw 5vw 5vw;
      box-shadow: 0 2px 8px #0002;
      text-align: center;
      /* transition: width 0.2s, padding 0.2s; */
    }
    .signup-container h1 { margin-bottom: 30px; }
    .containerDiv { text-align: center; width: 100%; margin: 0 auto; max-width: 500px; min-width: 180px; box-sizing: border-box; }
    .detail { font-weight: bold; }
    input {
      width: 100%;
      padding: 10px 14px;
      font-size: 16px;
      font-family: inherit;
      box-sizing: border-box;
      border: 1.5px solid #ccc;
      border-radius: 6px;
      outline: none;
      margin-bottom: 18px;
      background: #f9f9f9;
      transition: border-color 0.2s, box-shadow 0.2s;
    }
    input:focus {
      border-color: #7CC3E3;
      box-shadow: 0 0 0 2px #7cc3e355;
    }
    .statusMessage { font-size: 12px; text-align: center; color: #F4B962; }
    .innerButton {
      min-width: 50%;
      max-width: 100%;
      height: 40px;
      max-height: 70px;
      color: white;
      background-color: green;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-family: inherit;
      text-align: center;
      margin-top: 20px;
    }
    .password-input-wrapper {
      position: relative;
      width: 100%;
      display: flex;
      align-items: center;
    }
    .password-input-wrapper input[type="password"],
    .password-input-wrapper input[type="text"] {
      width: 100%;
      padding-right: 38px;
    }
    .password-input-wrapper img {
      position: absolute;
      right: 12px;
      top: 40%;
      transform: translateY(-50%);
      width: 22px;
      height: 22px;
      margin: 0;
      cursor: pointer;
      opacity: 0.7;
      transition: opacity 0.2s;
    }
    .password-input-wrapper img:hover {
      opacity: 1;
    }
  </style>
</head>
<body>
  <div class="signup-container">
    <h1>SIGN UP</h1>
    <form id="signup-form" autocomplete="off">
      <div class="containerDiv">
        <p class="detail"><strong>First Name</strong></p>
        <input type="text" class="input0" name="firstName" required>
        <p class="statusMessage statusMessage0"></p>
      </div>
      <div class="containerDiv">
        <p class="detail"><strong>Last Name</strong></p>
        <input type="text" class="input1" name="lastName" required>
        <p class="statusMessage statusMessage1"></p>
      </div>
      <div class="containerDiv">
        <p class="detail"><strong>ðŸ“§Email</strong></p>
        <input type="email" class="input2" name="email" required>
        <p class="statusMessage statusMessage2"></p>
      </div>
      <div class="containerDiv password">
        <p class="detail"><strong>ðŸ”‘Password</strong></p>
        <div class="password-input-wrapper">
          <input type="password" class="input3" name="passWord" required>
          <img src="/images/eye-solid.svg" id="togglePassword" alt="Show/Hide Password">
        </div>
        <p class="statusMessage statusMessage3"></p>
      </div>
      <div class="containerDiv">
        <p class="detail"><strong>ðŸ“žTelephone</strong></p>
        <input type="text" class="input4" name="phoneNo" required>
        <p class="statusMessage statusMessage4"></p>
      </div>
      <div class="containerDiv">
        <p class="detail"><strong>ðŸ‘¤Username</strong></p>
        <input type="text" class="input5" name="userName" required>
        <p class="statusMessage statusMessage5"></p>
      </div>
      <button class="innerButton" type="submit">SIGN UP</button>
    </form>
  </div>
  <script>
    // Validation patterns
    const alphaPattern = /^[a-zA-Z]+$/;
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const passwordPattern = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{6,19}$/;
    const phonePattern = /^\+\d{1,3}\s?\d{10}$|^\d{10}$|^\d{3}-\d{3}-\d{4}$|^0\d{10}$/;
    const usernamePattern = /^[a-zA-Z_!@#$%^&*()\-+=\s]{6,50}$/;

    // Eye icon toggle
    const passwordInput = document.querySelector('.input3');
    const eyeIcon = document.getElementById('togglePassword');
    let isClicked = false;
    eyeIcon.addEventListener('click', () => {
      isClicked = !isClicked;
      if (isClicked) {
        passwordInput.type = 'text';
        eyeIcon.src = '/images/eye-slash-solid.svg';
      } else {
        passwordInput.type = 'password';
        eyeIcon.src = '/images/eye-solid.svg';
      }
    });

    // Input validation
    function validateInput(input, pattern, message, statusClass) {
      const status = document.querySelector('.' + statusClass);
      if (pattern.test(input.value)) {
        input.style.outlineColor = 'green';
        input.style.border = '2px solid green';
        status.textContent = '';
        return true;
      } else {
        input.style.border = '2px solid red';
        input.style.outlineColor = 'red';
        status.textContent = message;
        return false;
      }
    }
    document.querySelector('.input0').addEventListener('input', function() {
      validateInput(this, alphaPattern, 'First name must be alphanumeric and 3-16 characters', 'statusMessage0');
    });
    document.querySelector('.input1').addEventListener('input', function() {
      validateInput(this, alphaPattern, 'Last name must be alphanumeric and 3-16 characters', 'statusMessage1');
    });
    document.querySelector('.input2').addEventListener('input', function() {
      validateInput(this, emailPattern, 'Email must be valid (e.g. example@email.com)', 'statusMessage2');
    });
    document.querySelector('.input3').addEventListener('input', function() {
      validateInput(this, passwordPattern, 'Password must be 6-19 chars, include a letter and a number', 'statusMessage3');
    });
    document.querySelector('.input4').addEventListener('input', function() {
      validateInput(this, phonePattern, 'Valid phone: +123 3333333333, 333-333-3334, or 3333333333', 'statusMessage4');
    });
    document.querySelector('.input5').addEventListener('input', function() {
      validateInput(this, usernamePattern, 'Username must be 6-50 characters', 'statusMessage5');
    });

    // Form submission
    document.getElementById('signup-form').addEventListener('submit', async function(e) {
      e.preventDefault();
      const firstName = document.querySelector('.input0').value;
      const lastName = document.querySelector('.input1').value;
      const email = document.querySelector('.input2').value;
      const passWord = document.querySelector('.input3').value;
      const phoneNo = document.querySelector('.input4').value;
      const userName = document.querySelector('.input5').value;
      // Validate all fields before sending
      let allValid = true;
      allValid &= validateInput(document.querySelector('.input0'), alphaPattern, '', 'statusMessage0');
      allValid &= validateInput(document.querySelector('.input1'), alphaPattern, '', 'statusMessage1');
      allValid &= validateInput(document.querySelector('.input2'), emailPattern, '', 'statusMessage2');
      allValid &= validateInput(document.querySelector('.input3'), passwordPattern, '', 'statusMessage3');
      allValid &= validateInput(document.querySelector('.input4'), phonePattern, '', 'statusMessage4');
      allValid &= validateInput(document.querySelector('.input5'), usernamePattern, '', 'statusMessage5');
      if (!allValid) return;
      // Check for existing users
      let usersList = [];
      try {
        const res = await fetch('/users');
        usersList = await res.json();
      } catch (err) {
        alert('Error fetching users: ' + err.message);
        return;
      }
      let existingUserName = false, usedEmail = false, usedPhoneNo = false;
      usersList.forEach(user => {
        if (user.userName.toLowerCase() === userName.toLowerCase()) existingUserName = true;
        if (user.email.toLowerCase() === email.toLowerCase()) usedEmail = true;
        if (user.phoneNo === phoneNo) usedPhoneNo = true;
      });
      if (existingUserName) {
        alert('Username already taken');
        return;
      }
      if (usedEmail) {
        alert('Email already used');
        return;
      }
      if (usedPhoneNo) {
        alert('Phone number already used');
        return;
      }
      // Submit to backend
      try {
        const response = await fetch('/register', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ firstName, lastName, userName, passWord, email, phoneNo })
        });
        const data = await response.json();
        if (data.success) {
          alert('Account created successfully!');
          document.getElementById('signup-form').reset();
        } else {
          alert(data.message);
        }
      } catch (err) {
        alert('Could not connect to server.');
      }
    });
  </script>
</body>
</html>
